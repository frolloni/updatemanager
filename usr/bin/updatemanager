#! /usr/bin/python3

import os
import sys
sys.path.append('/usr/lib/solydxk/updatemanager')
import pwd
import gettext
import getopt
from gi.repository import Gtk, Gdk
from os.path import join, abspath, dirname, exists
from umglobal import UmGlobal
from dialogs import MessageDialog, QuestionDialog

# i18n: http://docs.python.org/2/library/gettext.html
gettext.install("updatemanager", "/usr/share/locale")
_ = gettext.gettext

msg = _('Please enter your password')
scriptDir = join(abspath(dirname(__file__)), "../lib/solydxk/updatemanager")
umglobal = UmGlobal()

# Clear update history
def clearUpHistory():
    histFile = join(scriptDir, "files/updatemanager.hist")
    resetLine = None
    if exists(histFile):
        with open(histFile, 'r') as f:
            for line in reversed(f.readlines()):
                if "upd=" in line:
                    resetLine = "upd=2000.01.01\n"
                    break
        if resetLine is not None:
            print(("> Clear update history file"))
            with open(histFile, 'w') as f:
                f.write(resetLine)

def isRunningLive():
    liveDirs = ['/live', '/lib/live', '/rofs']
    for ld in liveDirs:
        if os.path.exists(ld):
            return True
    return False


def getLauncher():
    launcher = ""
    if os.geteuid() > 0:
        launcher = "gksudo --message \"<b>%s</b>\"" % msg
        if os.path.exists('/usr/bin/kdesudo'):
            launcher = "kdesudo -n -i 'update-manager' -d --comment \"<b>%s</b>\"" % msg
    return launcher


# Help
def usage():
    # Show usage
    hlp = """updatemanager [options]

Options:
  -p (--pref): Show the preference window
  -q (--quick): Quick upgrade
  -t (--tray): Load the tray icon only
  -f (--force): Force start in a live environment
  -u (--clear-upd): Clear Update Pack history
  -h (--help): Show this help"""
    print(hlp)

# Handle arguments
try:
    opts, args = getopt.getopt(sys.argv[1:], 'hpqtfru', ['help', 'pref', 'quick', 'tray', 'force', 'reload', 'clear-upd'])
except getopt.GetoptError:
    usage()
    sys.exit(1)

pref = False
tray = False
force = False
quick = False
arguments = []
for opt, arg in opts:
    if opt in ('-p', '--pref'):
        pref = True
    elif opt in ('-q', '--quick'):
        quick = True
    elif opt in ('-t', '--tray'):
        tray = True
    elif opt in ('-f', '--force'):
        force = True
    elif opt in ('-h', '--help'):
        usage()
        sys.exit()
    elif opt in ('-r', '--reload'):
        arguments.append("-r")
    elif opt in ('-u', '--clear-up'):
        clearUpHistory()

if quick:
    # Only one dialog allowed
    pids = umglobal.getScriptPids("/usr/bin/updatemanager -q")
    if len(pids) > 1:
        sys.exit(2)

    builder = Gtk.Builder()
    builder.add_from_file(join(scriptDir, '../../../share/solydxk/updatemanager/updatemanagerqu.glade'))
    go = builder.get_object
    dialogQu = go("dialogQU")
    go("lblQU").set_label(_("Quick update silently updates your system."))
    ret = dialogQu.run()
    dialogQu.hide()
    if ret == 0:
        # run quick update
        arguments.append("-q")
        while Gtk.events_pending():
            Gtk.main_iteration()
    elif ret == 1:
        # run update manager
        while Gtk.events_pending():
            Gtk.main_iteration()
    else:
        # cancelled
        sys.exit(3)

# Finish arguments string
arguments.append("&")

# Add launcher string, only when not root
launcher = getLauncher()

title = _("Update Manager")
msg = _("Update Manager cannot be started in a live environment\n"
        "You can use the --force argument to start UM in a live environment")

if pref:
    if isRunningLive() and not force:
        MessageDialog(title, msg, Gtk.MessageType.WARNING)
    else:
        if umglobal.isSrciptRunning("updatemanagerpref.py"):
            print(("updatemanagerpref.py already running - exiting"))
        else:
            cmd = "python3 {0}/updatemanagerpref.py {1}".format(scriptDir, " ".join(arguments))
            if launcher != "":
                cmd = "{0} '{1}'".format(launcher, cmd)
            print(cmd)
            os.system(cmd)
else:
    if not isRunningLive() and not force:
        if umglobal.isSrciptRunning("updatemanagertray.py"):
            print(("updatemanagertray.py already running - exiting"))
        else:
            cmd = "python3 {0}/updatemanagertray.py {1}".format(scriptDir, " ".join(arguments))
            print(cmd)
            os.system(cmd)
    if not tray:
        if isRunningLive() and not force:
            MessageDialog(title, msg, Gtk.MessageType.WARNING)
        else:
            if umglobal.isSrciptRunning("updatemanager.py"):
                print(("updatemanager.py already running - exiting"))
            else:
                cmd = "python3 {0}/updatemanager.py {1}".format(scriptDir, " ".join(arguments))
                if launcher != "":
                    cmd = "{0} '{1}'".format(launcher, cmd)
                print(cmd)
                os.system(cmd)
